{"version":3,"sources":["webpack:///./src/components/Content.js","webpack:///./src/components/Features.js","webpack:///./src/templates/committee.js"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","Content","FeatureGrid","gridItems","map","item","key","text","style","width","display","PreviewCompatibleImage","imageInfo","chair","CommitteePageTemplate","image","title","heading","description","intro","PageContent","contentComponent","backgroundImage","childImageSharp","fluid","src","boxShadow","backgroundColor","color","padding","Features","blurbs","committeePageQuery","CommitteePage","post","data","markdownRemark","Layout","frontmatter","html"],"mappings":"4FAAA,2DAGaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACzB,yBAAKA,UAAWA,EAAWC,wBAAyB,CAAEC,OAAQH,MAcjDI,IAXC,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACd,yBAAKA,UAAWA,GAAYD,K,mMC4BfK,EAhCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAClB,yBAAKL,UAAU,wBACZK,EAAUC,KAAI,SAACC,GAAD,OACb,yBAAKC,IAAKD,EAAKE,KAAMT,UAAU,eAC7B,6BAASA,UAAU,WACjB,yBAAKA,UAAU,qBACb,yBACEU,MAAO,CACLC,MAAO,QACPC,QAAS,iBAGX,kBAACC,EAAA,EAAD,CAAwBC,UAAWP,MAGvC,2BAAG,gCAASA,EAAKQ,OAAjB,IAAuCR,EAAKE,a,YCZzCO,EAAwB,SAAC,GAQ/B,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,MACAtB,EAEI,EAFJA,QAGMuB,EADF,EADJC,kBAEwCpB,IAExC,OAEA,yBAAKH,UAAU,WACb,yBACEA,UAAU,0CACVU,MAAO,CACLc,gBAAgB,QACZP,EAAMQ,gBAAkBR,EAAMQ,gBAAgBC,MAAMC,IAAMV,GAD/C,MAKjB,wBACEjB,UAAU,iCACVU,MAAO,CACLkB,UAAW,0CACXC,gBAAiB,UACjBC,MAAO,QACPC,QAAS,SAGVb,IAGL,6BAASlB,UAAU,6BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,sCAAsCmB,GACpD,4BAAKC,GACL,+BAGJ,yBAAKpB,UAAU,WACb,yBAAKA,UAAU,4BACb,kBAACgC,EAAD,CAAU3B,UAAWgB,EAAMY,WAG/B,yBAAKjC,UAAU,WACf,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,kBAACsB,EAAD,CAAatB,UAAU,UAAUD,QAASA,YAoD3CmC,GAFEC,UA1BO,SAAC,GAAc,IACXC,EADU,EAAXC,KACfC,eAER,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CACEhB,iBAAkBzB,IAClBmB,MAAOmB,EAAKI,YAAYvB,MACxBC,MAAOkB,EAAKI,YAAYtB,MACxBC,QAASiB,EAAKI,YAAYrB,QAC1BC,YAAagB,EAAKI,YAAYpB,YAC9BC,MAAOe,EAAKI,YAAYnB,MACxBtB,QAASqC,EAAKK,SAgBS","file":"component---src-templates-committee-js-a385b24117c2881b440b.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline\">\n    {gridItems.map((item) => (\n      <div key={item.text} className=\"column is-6\">\n        <section className=\"section\">\n          <div className=\"has-text-centered\">\n            <div\n              style={{\n                width: '240px',\n                display: 'inline-block',\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item} />\n            </div>\n          </div>\n          <p><strong>{item.chair}</strong>&nbsp;{item.text}</p>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n      chair: PropTypes.string,\n    })\n  ),\n}\n\nexport default FeatureGrid\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Features from '../components/Features'\nimport Content, { HTMLContent } from '../components/Content'\n\nexport const CommitteePageTemplate = ({\n  image,\n  title,\n  heading,\n  description,\n  intro,\n  content, \n  contentComponent\n}) => {\n  const PageContent = contentComponent || Content\n\n  return (\n\n  <div className=\"content\">\n    <div\n      className=\"full-width-image-container margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n      }}\n    >\n      <h2\n        className=\"has-text-weight-bold is-size-1\"\n        style={{\n          boxShadow: '0.5rem 0 0 #134d72, -0.5rem 0 0 #134d72',\n          backgroundColor: '#134d72',\n          color: 'white',\n          padding: '1rem',\n        }}\n      >\n        {title}\n      </h2>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"columns\">\n            <div className=\"column is-7 is-offset-1\">\n              <h3 className=\"has-text-weight-semibold is-size-2\">{heading}</h3>\n              <h3>{description}</h3>\n              <hr></hr>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              <Features gridItems={intro.blurbs} />\n            </div>\n          </div>\n          <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <div className=\"section\">\n              <PageContent className=\"content\" content={content} />\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n    </section>\n\n  </div>\n  )\n}\n\nCommitteePageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n  content: PropTypes.string,\n  contentComponent: PropTypes.func,\n}\n\nconst CommitteePage = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  return (\n    <Layout>\n      <CommitteePageTemplate\n        contentComponent={HTMLContent}\n        image={post.frontmatter.image}\n        title={post.frontmatter.title}\n        heading={post.frontmatter.heading}\n        description={post.frontmatter.description}\n        intro={post.frontmatter.intro}\n        content={post.html}\n      />\n    </Layout>\n  )\n}\n\nCommitteePage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default CommitteePage\n\nexport const committeePageQuery = graphql`\n  query CommitteePage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        heading\n        description\n        intro {\n          blurbs {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 240, quality: 64) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            chair\n            text\n          }\n        }\n\n\n      }\n    }\n  }\n`"],"sourceRoot":""}