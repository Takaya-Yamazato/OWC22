{"version":3,"sources":["webpack:///./src/templates/about-page.js","webpack:///./src/components/Content.js"],"names":["AboutPageTemplate","title","image","content","PageContent","contentComponent","Content","className","style","backgroundImage","childImageSharp","fluid","src","boxShadow","backgroundColor","color","padding","AboutPage","post","data","markdownRemark","HTMLContent","frontmatter","html","aboutPageQuery","dangerouslySetInnerHTML","__html"],"mappings":"8FAAA,yJAMaA,EAAoB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,QAC1CC,EAD0E,EAAvBC,kBACjBC,IAExC,OACE,yBAAKC,UAAU,WACf,yBACEA,UAAU,0CACVC,MAAO,CACLC,gBAAgB,QACZP,EAAMQ,gBAAkBR,EAAMQ,gBAAgBC,MAAMC,IAAMV,GAD/C,MAKjB,wBACEK,UAAU,iCACVC,MAAO,CACLK,UAAW,0CACXC,gBAAiB,UACjBC,MAAO,QACPC,QAAS,SAGVf,IAGL,6BAASM,UAAU,6BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,sDACXN,GAEH,kBAACG,EAAD,CAAaG,UAAU,UAAUJ,QAASA,WAoCzCc,UAnBG,SAAC,GAAc,IACPC,EADM,EAAXC,KACXC,eAER,OACE,kBAAC,IAAD,KACE,kBAACpB,EAAD,CACEK,iBAAkBgB,IAClBpB,MAAOiB,EAAKI,YAAYrB,MACxBC,MAAOgB,EAAKI,YAAYpB,MACxBC,QAASe,EAAKK,SAYf,IAAMC,EAAc,c,kCC7E3B,2DAGaH,EAAc,SAAC,GAAD,IAAGlB,EAAH,EAAGA,QAASI,EAAZ,EAAYA,UAAZ,OACzB,yBAAKA,UAAWA,EAAWkB,wBAAyB,CAAEC,OAAQvB,MAcjDG,IAXC,SAAC,GAAD,IAAGH,EAAH,EAAGA,QAASI,EAAZ,EAAYA,UAAZ,OACd,yBAAKA,UAAWA,GAAYJ","file":"component---src-templates-about-page-js-4f643fef469720496c62.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Content, { HTMLContent } from '../components/Content'\n\nexport const AboutPageTemplate = ({ title, image, content, contentComponent }) => {\n  const PageContent = contentComponent || Content\n\n  return (\n    <div className=\"content\">\n    <div\n      className=\"full-width-image-container margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n      }}\n    >\n      <h2\n        className=\"has-text-weight-bold is-size-1\"\n        style={{\n          boxShadow: '0.5rem 0 0 #134d72, -0.5rem 0 0 #134d72',\n          backgroundColor: '#134d72',\n          color: 'white',\n          padding: '1rem',\n        }}\n      >\n        {title}\n      </h2>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <div className=\"section\">\n              <h2 className=\"title is-size-3 has-text-weight-bold is-bold-light\">\n                {title}\n              </h2>\n              <PageContent className=\"content\" content={content} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n  )\n}\n\nAboutPageTemplate.propTypes = {\n  title: PropTypes.string.isRequired,\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  content: PropTypes.string,\n  contentComponent: PropTypes.func,\n}\n\nconst AboutPage = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  return (\n    <Layout>\n      <AboutPageTemplate\n        contentComponent={HTMLContent}\n        title={post.frontmatter.title}\n        image={post.frontmatter.image}\n        content={post.html}\n      />\n    </Layout>\n  )\n}\n\nAboutPage.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default AboutPage\n\nexport const aboutPageQuery = graphql`\n  query AboutPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n"],"sourceRoot":""}